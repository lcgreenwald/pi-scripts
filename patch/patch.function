#this installs the radio related software for pi-scripts-install
#km4ack 20200513
#wb0sio 20200820 Converted km4ack base.function to wb0sio base.function
#wb0sio 20210816 Converted wb0sio base.function to wb0sio radio.function
#wb0sio 20210927 Converted wb0sio radio.function to wb0sio patch.function

TEMPCRON=${MYPATH}/cron.tmp
TEMPSYSCTL=${MYPATH}/sysctl.tmp
PATCHDIR=/run/user/${UID}/patch
PATCHFILE=$HOME/.config/patch
touch $PATCHFILE
source $PATCHFILE

##################################################
##################################################
#  NOTE: Alpha-numeric characters only in the patch name.
##################################################
##################################################


################################################################ Patch start
#	hamlib4dot3dot1date20211105
################################
hamlib4dot3dot1date20211105(){
###############################
#Patch name to record in PATCHFILE
###############################
PATCHNAME=hamlib4dot3dot1date20211105

###############################
#Patch script commands go here
###############################
clear;echo;echo
if [ -d $HOME/Downloads/hamlib-4.3.1 ]; then 
cd $HOME/Downloads/hamlib-4.3.1
sudo make uninstall
sudo make clean
sudo apt install -y libusb-1.0 libusb-dev
./configure
make
sudo make install
sudo ldconfig
else
echo "###################################"
echo "hamlib source directory not found"
echo "Downloading hamlib"
echo "###################################"
sleep 2
cd $HOME/Downloads
	NEWRIG=$(curl -s https://github.com/Hamlib/Hamlib/releases | 
		grep -o /Hamlib/Hamlib/releases/download/[0-9].[0-9].[0-9] |
		head -n 1 | awk -F "/" '{print $6}')
	HAMLIBLINK=https://github.com/Hamlib/Hamlib/releases/hamlib-${NEWRIG}.tar.gz
	cd ${HOME}/Downloads || return
	echo "###################################"
	echo "#		Installing Hamlib	"
	echo "###################################"
	wget --tries 2 --connect-timeout=60 ${HAMLIBLINK}

	tar -xzf hamlib-${NEWRIG}.tar.gz
	rm hamlib-${NEWRIG}.tar.gz
	cd hamlib-${NEWRIG} || return
	sudo apt install -y libusb-1.0 libusb-dev
	./configure
	make
	sudo make install
	sudo ldconfig
fi

#############################################
#write patch name to a file so we can	   
#look and see if it has been applied before.
#This is checked by the patch-menu script   
#before running the patch				   
#############################################
echo "$PATCHNAME" >> $PATCHFILE

}
################################################################ Patch end

################################################################ Patch start
#	ConkyDesktops20211112
################################
ConkyDesktops20211112(){
###############################
#Patch name to record in PATCHFILE
###############################
PATCHNAME=ConkyDesktops20211112

###############################
#Patch script commands go here
###############################
echo
echo
echo "This is patch ConkyDesktops20211112"
echo
cd ${PATCHDIR}
git init pi-scripts
cd pi-scripts
git remote add -f origin https://github.com/lcgreenwald/pi-scripts.git
git config core.sparseCheckout true
echo "/patch" >> .git/info/sparse-checkout
git pull origin dev

cp -frT ${PATCHDIR}/pi-scripts/patch/desktop_files ${HOME}/.local/share/applications/
cp -frT ${PATCHDIR}/pi-scripts/patch/conky ${HOME}/.local/share/applications/

#############################################
#write patch name to a file so we can	   
#look and see if it has been applied before.
#This is checked by the patch-menu script   
#before running the patch				   
#############################################
echo "$PATCHNAME" >> $PATCHFILE

}
################################################################ Patch end


################################################################ Patch start
#	PythonGPS20211119
################################
PythonGPS20211119(){
###############################
#Patch name to record in PATCHFILE
###############################
PATCHNAME=PythonGPS20211119

###############################
#Patch script commands go here
###############################
echo
echo
echo "This is patch PythonGPS20211119"
echo
cd ${PATCHDIR}
wget https://raw.githubusercontent.com/lcgreenwald/pi-scripts/dev/patch/PyGridsquare.py
#wget https://raw.githubusercontent.com/lcgreenwald/pi-scripts/dev/patch/PythonGPSsetup.sh
chmod a+x PyGridsquare.py
#chmod a+x PythonGPSsetup.sh
cp PyGridsquare.py ${HOME}/bin
#bash PythonGPSsetup.sh

##############################
# Python GPS setup
# created: 2021-11-19 Larry Greenwald
# Based on code by Kevin KD9EFV posted in https://groups.io/g/KM4ACK-Pi/topic/86954136#6311
# Modified:
#
##############################

##############################
# Update PIP
##############################
/usr/bin/python3 -m pip install --upgrade pip

##############################
# Install maidenhead and gpsdclient for python
##############################
sudo pip3 install gpsdclient
sudo pip3 install maidenhead

##############################
# to_maiden.py is defined with three inputs, (lat, lon, precision) however 
# calling mh.to_maiden(lat, lon) with all three throws a too many arguments error, limiting precision
# to three pair (AA11bb).
# This edit defaults the return to six pair precision. (AA11bb22CC33)
# 
##############################
TOMAIDEN=$(find / -name to_maiden.py)

sudo sed -i "s/precision: int = 3/precision: int = 6/" ${TOMAIDEN}

sed -i "s/exec cat \$HOME\/bin\/conky\/Grid.txt/execi 25 \${HOME}\/bin\/PyGridsquare.py/" ${HOME}/.conkyrc
sed -i "s/exec cat \$HOME\/bin\/conky\/Grid.txt/execi 25 \${HOME}\/bin\/PyGridsquare.py/" ${HOME}/pi-scripts/conky/conky-extrasmall
sed -i "s/exec cat \$HOME\/bin\/conky\/Grid.txt/execi 25 \${HOME}\/bin\/PyGridsquare.py/" ${HOME}/pi-scripts/conky/conky-small
sed -i "s/exec cat \$HOME\/bin\/conky\/Grid.txt/execi 25 \${HOME}\/bin\/PyGridsquare.py/" ${HOME}/pi-scripts/conky/conky-medium
sed -i "s/exec cat \$HOME\/bin\/conky\/Grid.txt/execi 25 \${HOME}\/bin\/PyGridsquare.py/" ${HOME}/pi-scripts/conky/conky-large


#############################################
#write patch name to a file so we can	   
#look and see if it has been applied before.
#This is checked by the patch-menu script   
#before running the patch				   
#############################################
echo "$PATCHNAME" >> $PATCHFILE

}
################################################################ Patch end


################################################################ Patch start
#	testpatch20211020
################################
testpatch20211020(){
###############################
#Patch name to record in PATCHFILE
###############################
PATCHNAME=testpatch20211020

###############################
#Patch script commands go here
###############################
echo
echo
echo "This is patch testpatch20211020"
echo

#############################################
#write patch name to a file so we can	   
#look and see if it has been applied before.
#This is checked by the patch-menu script   
#before running the patch				   
#############################################
echo "$PATCHNAME" >> $PATCHFILE

}
################################################################ Patch end




################################################################ Patch start
#	Proto
################################
Proto(){
	# Install/update Proto  
	cd
	if [ ! -d ${HOME}/Proto 2>/dev/null ]; then
		echo "file" >/dev/null
	else
		echo "file" >/dev/null
	fi

# Create the desktop entry
	cat <<EOF > ${HOME}/.local/share/applications/Proto.desktop
[Desktop Entry]
Version=1.0
Name=Proto
Comment=
Exec=/home/pi/bin/proto.sh
Icon=proto_icon
Terminal=false
X-MultipleArgs=false
Type=Application
Categories=wb0sio;
StartupNotify=true
NoDisplay=false
EOF

	# Create the shell script to run proto
	if [ ! -d ${HOME}/bin 2>/dev/null ]; then
		mkdir ${HOME}/bin >/dev/null
	fi

	cat <<EOF > ${HOME}/bin/proto.sh
#!/bin/bash
cd ${HOME}/Proto
python3 Proto.py
EOF

	# Make the shell script executable
	chmod a+x ${HOME}/bin/Proto.sh
}
################################################################ Patch end

################################################################ Patch start
#	Proto File
################################
Proto(){
if ! hash file 2>/dev/null ; then
	echo "file" >/dev/null
fi
}
################################################################ Patch end

################################################################ Patch start
#	Proto Folder
################################
ProtoF(){
if [ ! -d ${HOME}/folder 2>/dev/null ]; then
	echo "folder" >/dev/null
fi
}
################################################################ Patch end


